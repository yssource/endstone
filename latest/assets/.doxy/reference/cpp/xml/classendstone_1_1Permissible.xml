<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classendstone_1_1Permissible" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::Permissible</compoundname>
    <derivedcompoundref refid="classendstone_1_1CommandSender" prot="public" virt="non-virtual">endstone::CommandSender</derivedcompoundref>
    <includes refid="permissible_8h" local="no">endstone/permissions/permissible.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Permissible_1afd630275e217c42932d29208712fe438" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::Permissible::~Permissible</definition>
        <argsstring>()=default</argsstring>
        <name>~Permissible</name>
        <qualifiedname>endstone::Permissible::~Permissible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="36" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a337e6323e8e49d8ce6e2c16b091e5d53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
        <definition>virtual bool endstone::Permissible::isOp</definition>
        <argsstring>() const =0</argsstring>
        <name>isOp</name>
        <qualifiedname>endstone::Permissible::isOp</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a3677c8f7a848edc3ee53c5a23ab58b52">isOp</reimplementedby>
        <briefdescription>
<para>Checks if this object is a server operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if this is an operator, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="43" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a2cf4819b46b03d25c17f1fa15a679233" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">void</ref></type>
        <definition>virtual void endstone::Permissible::setOp</definition>
        <argsstring>(bool value)=0</argsstring>
        <name>setOp</name>
        <qualifiedname>endstone::Permissible::setOp</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1adc6b57a30c34ea968b81ceb660a1e976">setOp</reimplementedby>
        <param>
          <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the operator status of this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New operator value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ae625f98f57116c559dc35a6cfce960d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
        <definition>virtual bool endstone::Permissible::isPermissionSet</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>isPermissionSet</name>
        <qualifiedname>endstone::Permissible::isPermissionSet</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a07e8de81fb735c7745c96cbb4d022889">isPermissionSet</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if this object contains an override for the specified permission, by fully qualified name</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the permission </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the permission is set, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="58" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1af40d6121208b293a05abf56c47792995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
        <definition>virtual bool endstone::Permissible::isPermissionSet</definition>
        <argsstring>(const Permission &amp;perm) const =0</argsstring>
        <name>isPermissionSet</name>
        <qualifiedname>endstone::Permissible::isPermissionSet</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a3a0af073b600c858dc0587c9a399296d">isPermissionSet</reimplementedby>
        <param>
          <type><ref refid="classendstone_1_1Vector" kindref="compound">const</ref> <ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if this object contains an override for the specified <ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>perm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the permission is set, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="66" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ade03215666f81be410f2b058fa2c158b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
        <definition>virtual bool endstone::Permissible::hasPermission</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>hasPermission</name>
        <qualifiedname>endstone::Permissible::hasPermission</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1aa112f1f81d557d85be8d85c264ec6038">hasPermission</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value of the specified permission, if set. If a permission override is not set on this object, the default value of the permission will be returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the permission </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="75" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ae3da30350acda91f5a007e15fc783ae6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
        <definition>virtual bool endstone::Permissible::hasPermission</definition>
        <argsstring>(const Permission &amp;perm) const =0</argsstring>
        <name>hasPermission</name>
        <qualifiedname>endstone::Permissible::hasPermission</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a47a9cae3fa4ac1c4cb19a39d3f716a7c">hasPermission</reimplementedby>
        <param>
          <type><ref refid="classendstone_1_1Vector" kindref="compound">const</ref> <ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value of the specified permission, if set. If a permission override is not set on this object, the default value of the permission will be returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>perm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="84" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ada705f51f6b8d94304b53cf66f5e26a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> * &gt;</type>
        <definition>virtual Result&lt; PermissionAttachment * &gt; endstone::Permissible::addAttachment</definition>
        <argsstring>(Plugin &amp;plugin, const std::string &amp;name, bool value)=0</argsstring>
        <name>addAttachment</name>
        <qualifiedname>endstone::Permissible::addAttachment</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a1515cda416373f98bced2fc1934f4302">addAttachment</reimplementedby>
        <param>
          <type><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> &amp;</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type><ref refid="classendstone_1_1Vector" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classendstone_1_1Vector" kindref="compound">bool</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> with a single permission by name and value</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plugin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> responsible for this attachment, may not be null or disabled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the permission to attach </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the permission </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> that was just created </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="94" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a344f309bb63d9861d854c074b4e2bd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> * &gt;</type>
        <definition>virtual Result&lt; PermissionAttachment * &gt; endstone::Permissible::addAttachment</definition>
        <argsstring>(Plugin &amp;plugin)=0</argsstring>
        <name>addAttachment</name>
        <qualifiedname>endstone::Permissible::addAttachment</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1ad60d3b2651ad27433df1f6d380b85dfd">addAttachment</reimplementedby>
        <param>
          <type><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> &amp;</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new empty <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> to this object</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plugin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> responsible for this attachment, may not be null or disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> that was just created </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="102" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a29dd5407f2c750a9b267f335d47aad29" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1Vector" kindref="compound">void</ref> &gt;</type>
        <definition>virtual Result&lt; void &gt; endstone::Permissible::removeAttachment</definition>
        <argsstring>(PermissionAttachment &amp;attachment)=0</argsstring>
        <name>removeAttachment</name>
        <qualifiedname>endstone::Permissible::removeAttachment</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1ab8a7effdb0ad25b4da6a202093ceb2d0">removeAttachment</reimplementedby>
        <param>
          <type><ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> &amp;</type>
          <declname>attachment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the given <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> from this object</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attachment</parametername>
</parameternamelist>
<parameterdescription>
<para>Attachment to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the specified attachment was removed successfully, false when it isn&apos;t part of this object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="110" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1acbd0e4c4815db28b66ef14976f110af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">void</ref></type>
        <definition>virtual void endstone::Permissible::recalculatePermissions</definition>
        <argsstring>()=0</argsstring>
        <name>recalculatePermissions</name>
        <qualifiedname>endstone::Permissible::recalculatePermissions</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a02337d177f390cee414977a16b3e07bd">recalculatePermissions</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recalculates the permissions for this object, if the attachments have changed values. This should very rarely need to be called from a plugin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="116" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ad9307f3eef07e6e03a55b4fe9aab9be6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unordered_set&lt; <ref refid="classendstone_1_1PermissionAttachmentInfo" kindref="compound">PermissionAttachmentInfo</ref> * &gt;</type>
        <definition>virtual std::unordered_set&lt; PermissionAttachmentInfo * &gt; endstone::Permissible::getEffectivePermissions</definition>
        <argsstring>() const =0</argsstring>
        <name>getEffectivePermissions</name>
        <qualifiedname>endstone::Permissible::getEffectivePermissions</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1aeeb41c929000b7f74f64d289d509edba">getEffectivePermissions</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a set containing all the permissions currently in effect by this object</para>
<para><simplesect kind="return"><para>Set of currently effective permissions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="123" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a49323c37f310044720678e27513b44dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref> *</type>
        <definition>virtual CommandSender * endstone::Permissible::asCommandSender</definition>
        <argsstring>() const =0</argsstring>
        <name>asCommandSender</name>
        <qualifiedname>endstone::Permissible::asCommandSender</qualifiedname>
        <reimplementedby refid="classendstone_1_1CommandSender_1a4f5be88d28d49e1c7424acd1c30fc893">asCommandSender</reimplementedby>
        <reimplementedby refid="classendstone_1_1CommandSenderWrapper_1a5fc91f3c240a91dc5a37d1e0345da2c6">asCommandSender</reimplementedby>
        <briefdescription>
<para>Casts a <ref refid="classendstone_1_1Permissible" kindref="compound">Permissible</ref> as <ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref>, nullptr if not a <ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="130" column="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents an object that may become a server operator and can be assigned permissions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>endstone::Actor</label>
        <link refid="classendstone_1_1Actor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>endstone::CommandSender</label>
        <link refid="classendstone_1_1CommandSender"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>endstone::CommandSenderWrapper</label>
        <link refid="classendstone_1_1CommandSenderWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>endstone::ConsoleCommandSender</label>
        <link refid="classendstone_1_1ConsoleCommandSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>endstone::Mob</label>
        <link refid="classendstone_1_1Mob"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>endstone::Permissible</label>
        <link refid="classendstone_1_1Permissible"/>
      </node>
      <node id="5">
        <label>endstone::Player</label>
        <link refid="classendstone_1_1Player"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>endstone::ProxiedCommandSender</label>
        <link refid="classendstone_1_1ProxiedCommandSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/endstone/permissions/permissible.h" line="34" column="1" bodyfile="include/endstone/permissions/permissible.h" bodystart="34" bodyend="131"/>
    <listofallmembers>
      <member refid="classendstone_1_1Permissible_1ada705f51f6b8d94304b53cf66f5e26a2" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>addAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1a344f309bb63d9861d854c074b4e2bd60" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>addAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1a49323c37f310044720678e27513b44dc" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>asCommandSender</name></member>
      <member refid="classendstone_1_1Permissible_1ad9307f3eef07e6e03a55b4fe9aab9be6" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>getEffectivePermissions</name></member>
      <member refid="classendstone_1_1Permissible_1ade03215666f81be410f2b058fa2c158b" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>hasPermission</name></member>
      <member refid="classendstone_1_1Permissible_1ae3da30350acda91f5a007e15fc783ae6" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>hasPermission</name></member>
      <member refid="classendstone_1_1Permissible_1a337e6323e8e49d8ce6e2c16b091e5d53" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>isOp</name></member>
      <member refid="classendstone_1_1Permissible_1ae625f98f57116c559dc35a6cfce960d9" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>isPermissionSet</name></member>
      <member refid="classendstone_1_1Permissible_1af40d6121208b293a05abf56c47792995" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>isPermissionSet</name></member>
      <member refid="classendstone_1_1Permissible_1acbd0e4c4815db28b66ef14976f110af5" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>recalculatePermissions</name></member>
      <member refid="classendstone_1_1Permissible_1a29dd5407f2c750a9b267f335d47aad29" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>removeAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1a2cf4819b46b03d25c17f1fa15a679233" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>setOp</name></member>
      <member refid="classendstone_1_1Permissible_1afd630275e217c42932d29208712fe438" prot="public" virt="virtual"><scope>endstone::Permissible</scope><name>~Permissible</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
