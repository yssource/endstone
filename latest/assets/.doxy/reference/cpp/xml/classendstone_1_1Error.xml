<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classendstone_1_1Error" kind="class" language="C++" prot="public">
    <compoundname>endstone::Error</compoundname>
    <includes refid="error_8h" local="no">endstone/util/error.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classendstone_1_1Error_1a76da8953868eeb80373357c0f524e08a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string endstone::Error::message_</definition>
        <argsstring></argsstring>
        <name>message_</name>
        <qualifiedname>endstone::Error::message_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/error.h" line="49" column="17" bodyfile="include/endstone/util/error.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classendstone_1_1Error_1ae3b5543e80a7f6a83ba9b0ecb52288bc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string endstone::Error::stack_trace_</definition>
        <argsstring></argsstring>
        <name>stack_trace_</name>
        <qualifiedname>endstone::Error::stack_trace_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/error.h" line="50" column="17" bodyfile="include/endstone/util/error.h" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Error_1af611da345686deb7c2a012faec27ac49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>endstone::Error::Error</definition>
        <argsstring>(std::string_view message, std::string_view stack_trace)</argsstring>
        <name>Error</name>
        <qualifiedname>endstone::Error::Error</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>stack_trace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/error.h" line="26" column="3" bodyfile="include/endstone/util/error.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Error_1a940c1dd781469d3a9f0bf69c7a5cbf03" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view endstone::Error::getMessage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getMessage</name>
        <qualifiedname>endstone::Error::getMessage</qualifiedname>
        <briefdescription>
<para>Returns the error message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The error message. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/error.h" line="33" column="23" bodyfile="include/endstone/util/error.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Error_1a5ecca04e37249d7e84266e24f96744b0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view endstone::Error::getStackTrace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getStackTrace</name>
        <qualifiedname>endstone::Error::getStackTrace</qualifiedname>
        <briefdescription>
<para>Returns the stack trace associated with the error. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The stack trace associated with the error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/error.h" line="43" column="23" bodyfile="include/endstone/util/error.h" bodystart="43" bodyend="46"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents an error with a message and the stack trace. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/endstone/util/error.h" line="24" column="1" bodyfile="include/endstone/util/error.h" bodystart="24" bodyend="51"/>
    <listofallmembers>
      <member refid="classendstone_1_1Error_1af611da345686deb7c2a012faec27ac49" prot="public" virt="non-virtual"><scope>endstone::Error</scope><name>Error</name></member>
      <member refid="classendstone_1_1Error_1a940c1dd781469d3a9f0bf69c7a5cbf03" prot="public" virt="non-virtual"><scope>endstone::Error</scope><name>getMessage</name></member>
      <member refid="classendstone_1_1Error_1a5ecca04e37249d7e84266e24f96744b0" prot="public" virt="non-virtual"><scope>endstone::Error</scope><name>getStackTrace</name></member>
      <member refid="classendstone_1_1Error_1a76da8953868eeb80373357c0f524e08a" prot="private" virt="non-virtual"><scope>endstone::Error</scope><name>message_</name></member>
      <member refid="classendstone_1_1Error_1ae3b5543e80a7f6a83ba9b0ecb52288bc" prot="private" virt="non-virtual"><scope>endstone::Error</scope><name>stack_trace_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
